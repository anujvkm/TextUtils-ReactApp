{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","settext","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","class","word","lower","charAt","slice","capatilize","message","App","setMode","_useState3","_useState4","setAlert","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2ad263a5.chunk.js","sourcesContent":["import React from 'react';\r\n//import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return(\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n              <a className=\"navbar-brand\" href=\"/\">{props.title}\r\n              </a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                  <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                  <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                      <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <a className=\"nav-link\" href=\"/about\">{props.aboutText}\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                  <div className={`form-check form-switch text-${props.mode=== 'light'?'dark':'light'}`}>\r\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark mode</label>\r\n                  </div>\r\n                  \r\n                </div>\r\n            </div>\r\n      </nav>\r\n  )\r\n}\r\n","import React, {useState} from 'react';\r\n\r\nexport default function TextForm(props) {\r\n\r\n        const handleupclick = () => {\r\n            console.log(\"Uppercase was clicked\" +text);\r\n            let newText = text.toUpperCase();\r\n            settext(newText);\r\n            props.showAlert(\"Converted to uppercase!\", \"success\");\r\n        }\r\n        const handleloclick = () => {\r\n            console.log(\"Uppercase was clicked\" +text);\r\n            let newText = text.toLowerCase();\r\n            settext(newText);\r\n            props.showAlert(\"Converted to lowercase!\", \"success\");\r\n        }\r\n\r\n        const handleOnChange = (event) => {\r\n            console.log(\"On change\");\r\n            settext(event.target.value);\r\n        }\r\n        const handleClearClick = () => {\r\n            let newText = '';\r\n            settext(newText)\r\n            props.showAlert(\"Clear text!\", \"success\");\r\n        }\r\n        const handleCopy = () => {\r\n            var text = document.getElementById(\"myBox\");\r\n            text.select();\r\n            navigator.clipboard.writeText(text.value);\r\n            props.showAlert(\"Copied to clipboard!\", \"success\");\r\n        }\r\n        const handleExtraSpaces = () => {\r\n            let newText = text.split(/[ ]+/);\r\n            settext(newText.join(\" \"))\r\n            props.showAlert(\"Extra spaces removed!\", \"success\");\r\n        }\r\n\r\n        const [text, settext] = useState('');\r\n        return (\r\n            <>\r\n                <div className=\"container\" style={{color: props.mode === 'dark'?'white':'black'}}>\r\n                    <h1>{props.heading}</h1>\r\n                    <div className=\"mb-3\">\r\n                    <textarea id='myBox' className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode === 'dark'?'#2a344f':'white', color: props.mode === 'dark'?'white':'black'}} rows=\"8\"></textarea>\r\n                    </div>\r\n                    <button className='btn btn-primary mx-2' onClick={handleupclick}>Convert to Uppercase</button>\r\n                    <button className='btn btn-primary mx-2' onClick={handleloclick}>Convert to Lowercase</button>\r\n                    <button className='btn btn-primary mx-2' onClick={handleClearClick}>Clear text</button>\r\n                    <button className='btn btn-primary mx-2' onClick={handleCopy}>copy text</button>\r\n                    <button className='btn btn-primary mx-2' onClick={handleExtraSpaces}>Remove extra spaces</button>\r\n                </div>\r\n                <div className='container my-3' style={{color: props.mode === 'dark'?'white':'black'}}>\r\n                    <h1>Your text summary</h1>\r\n                    <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n                    <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n                    <h2>Preview</h2>\r\n                    <p>{text.length>0?text:\"Enter something in the textbox to preview it here\"}</p>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capatilize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capatilize(props.alert.type)}</strong>: {props.alert.message}\r\n        \r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Alert","//import react from \"react\";\nimport \"./App.css\";\n//import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, {useState} from 'react';\nimport Alert from \"./components/Alert\";\n   //import {\n   // BrowserRouter as Router,\n   // Switch,\n   // Route,\n   //} from \"react-router-dom\";\n\nfunction App(){\n\n    const [mode, setMode] = useState('light'); //weather dark mode enable or not\n\n    const [alert, setAlert] = useState(null);\n\n    const showAlert = (message, type) =>{\n      setAlert({\n        message: message,\n        type: type\n      })\n      setTimeout(() => {\n        setAlert(null);\n      }, 1500);\n    }\n\n    const toggleMode = () => {\n              if(mode === 'light'){\n                    setMode('dark');\n                    document.body.style.backgroundColor = '#2a344f';\n                    showAlert(\"Dark mode has been enabled\", \"success\");\n              }else{\n                    setMode('light');\n                    document.body.style.backgroundColor = 'white';\n                    showAlert(\"Light mode has been enabled\", \"success\");\n              }\n    }\n    return(\n    <>\n          {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\"/> */}\n          {/* <Navbar/> */}\n          {/*<Router>*/}\n          <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} aboutText=\"About\"/>\n          <Alert alert={alert}/>\n          <div className=\"container my-1\">\n                {/*<Switch>*/}\n                  {/*users ---> component 1\n                  users/home ----> component 2\n                    <Route exact path=\"/about\">\n                      <About/>\n                    </Route>\n                <Route exact path=\"/\">*/}\n                      <TextForm showAlert={showAlert} heading=\"Enter The Text To Analyze below\" mode = {mode}/>\n                    {/*</Route>\n                </Switch>*/}\n                \n          </div>\n          {/* </Router> */}\n      </>\n  );\n  \n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}